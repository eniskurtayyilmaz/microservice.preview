version: "3.4"

services:
  #begin catalog
  catalogdb:
    container_name: catalogdb
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  catalog.api:
    container_name: catalog.api
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    ports:
      - "8000:80"
  #end catalog

  #begin basket
  basketdb:
    container_name: basketdb
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"

  basket.api:
    container_name: basket.api
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
    depends_on:
      - basketdb
    ports:
      - "8001:80"
  #end basket

  #begin discount
  discountdb:
    container_name: discountdb
    image: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=ben@eniskurtayyilmaz.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  discount.api:
    container_name: discount.api
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
    depends_on:
      - discountdb
    ports:
      - "8002:80"

  #end discount

  #begin portainer
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  #end portainer

  # consul:
  #   container_name: consul
  #   command: -server -bootstrap-expect 1
  #   image: progrium/consul:latest
  #   ports:
  #     - 8300:8300
  #     - 8400:8400
  #     - 8500:8500
  #     - 8600:53/udp
  # registrator:
  #   container_name: registrator
  #   command: -internal consul://consul:8500
  #   image: gliderlabs/registrator:latest
  #   links:
  #     - consul
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock

volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data:
